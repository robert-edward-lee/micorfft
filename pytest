#!/usr/bin/env python
import argparse
import importlib.util
import os

PYTEST_DIR = 'pytest_modules'

parser = argparse.ArgumentParser()
parser.add_argument('-g', '--generate', help='generate c wrapper', action='store_true')
parser.add_argument('-r', '--run', help='run c wrapper', action='store_true')
args = parser.parse_args()
if args.generate:
    for filename in os.listdir(PYTEST_DIR):
        if filename.endswith('.py') and not filename.startswith('__'):
            # имя модуля без расширения .py
            module_name = os.path.splitext(filename)[0]
            # полное имя модуля с учетом директории
            full_module_name = f'{PYTEST_DIR}.{module_name}'
            # динамическая загрузка модуля
            spec = importlib.util.spec_from_file_location(full_module_name, os.path.join(PYTEST_DIR, filename))
            module = importlib.util.module_from_spec(spec)
            spec.loader.exec_module(module)

            try:
                module.gen(f'c_wrapper_{module_name}')
            except AttributeError as e:
                print(f'Error({full_module_name}) gen: {e}')
elif args.run:
    for filename in os.listdir(PYTEST_DIR):
        if filename.endswith('.py') and not filename.startswith('__'):
            # имя модуля без расширения .py
            module_name = os.path.splitext(filename)[0]
            # полное имя модуля с учетом директории
            full_module_name = f'{PYTEST_DIR}.{module_name}'
            # динамическая загрузка модуля
            spec = importlib.util.spec_from_file_location(full_module_name, os.path.join(PYTEST_DIR, filename))
            module = importlib.util.module_from_spec(spec)
            spec.loader.exec_module(module)

            try:
                module.run(f'c_wrapper_{module_name}')
            except AttributeError as e:
                print(f'Error({full_module_name}) run: {e}')
